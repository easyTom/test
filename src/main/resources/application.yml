# 服务器端口
server.port: 5210

# 数据库连接
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
# 更改数据库端口及名称
    url: jdbc:mysql://localhost:3306/bsctelmed?useUnicode=true&characterEncoding=utf-8
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
# 配置获取连接等待超时的时间
    maxWait: 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
#testOnBorrow和testOnReturn在生产环境一般是不开启的，主要是性能考虑。
#失效连接主要通过testWhileIdle保证，如果获取到了不可用的数据库连接，一般由应用处理异常。    
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

mybatis-plus:
  mapper-locations: classpath:/mapper/*/*Mapper.xml

spring.thymeleaf:
  cache: false
 # prefix: classpath:/templates/

#MVC
spring.resources:
  cache-period: 604800
  chain:
    gzipped: true
    cache: true

# 上传文件大小限制
spring.http.multipart:
  max-file-size: 30Mb
  max-request-size: 30Mb
  
tom:
  port: http://localhost:5210
#tom:
  #port: http://47.105.49.243:5210
